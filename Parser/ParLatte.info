-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser/ParLatte.y
-----------------------------------------------------------------------------

state 73 contains 1 shift/reduce conflicts.
state 77 contains 1 shift/reduce conflicts.
state 145 contains 1 shift/reduce conflicts.

rule 45 is unused
rule 46 is unused
rule 47 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> FnDef                                    (5)
	TopDef -> 'class' Ident '{' ListClassStmt '}'      (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClassStmt '}'   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	ClassStmt -> FnDef                                 (10)
	ClassStmt -> Type Ident ';'                        (11)
	ListClassStmt -> ClassStmt                         (12)
	ListClassStmt -> ClassStmt ListClassStmt           (13)
	FnDef -> Type Ident '(' ListArg ')' Block          (14)
	Arg -> Type Ident                                  (15)
	ListArg ->                                         (16)
	ListArg -> Arg                                     (17)
	ListArg -> Arg ',' ListArg                         (18)
	Block -> '{' ListStmt '}'                          (19)
	ListStmt ->                                        (20)
	ListStmt -> Stmt ListStmt                          (21)
	Stmt -> ';'                                        (22)
	Stmt -> Block                                      (23)
	Stmt -> Type ListItem ';'                          (24)
	Stmt -> Expr '=' Expr ';'                          (25)
	Stmt -> Ident '++' ';'                             (26)
	Stmt -> Ident '--' ';'                             (27)
	Stmt -> 'return' Expr ';'                          (28)
	Stmt -> 'return' ';'                               (29)
	Stmt -> 'if' '(' Expr ')' Stmt                     (30)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (31)
	Stmt -> 'while' '(' Expr ')' Stmt                  (32)
	Stmt -> Expr ';'                                   (33)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (34)
	Item -> Ident                                      (35)
	Item -> Ident '=' Expr                             (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	Type -> 'int'                                      (39)
	Type -> 'string'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Type '[]'                                  (43)
	Type -> Ident                                      (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr6 -> Ident                                     (48)
	Expr6 -> Integer                                   (49)
	Expr6 -> 'true'                                    (50)
	Expr6 -> 'false'                                   (51)
	Expr6 -> 'new' Type '[' Expr ']'                   (52)
	Expr6 -> 'new' Type                                (53)
	Expr6 -> Ident '(' ListExpr ')'                    (54)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (55)
	Expr6 -> Expr6 '.' Ident                           (56)
	Expr6 -> Expr6 '[' Expr ']'                        (57)
	Expr6 -> '(' Ident ')' 'null'                      (58)
	Expr6 -> String                                    (59)
	Expr6 -> '(' Expr ')'                              (60)
	Expr5 -> '-' Expr6                                 (61)
	Expr5 -> '!' Expr6                                 (62)
	Expr5 -> Expr6                                     (63)
	Expr4 -> Expr4 MulOp Expr5                         (64)
	Expr4 -> Expr5                                     (65)
	Expr3 -> Expr3 AddOp Expr4                         (66)
	Expr3 -> Expr4                                     (67)
	Expr2 -> Expr2 RelOp Expr3                         (68)
	Expr2 -> Expr3                                     (69)
	Expr1 -> Expr2 '&&' Expr1                          (70)
	Expr1 -> Expr2                                     (71)
	Expr -> Expr1 '||' Expr                            (72)
	Expr -> Expr1                                      (73)
	ListExpr ->                                        (74)
	ListExpr -> Expr                                   (75)
	ListExpr -> Expr ',' ListExpr                      (76)
	AddOp -> '+'                                       (77)
	AddOp -> '-'                                       (78)
	MulOp -> '*'                                       (79)
	MulOp -> '/'                                       (80)
	MulOp -> '%'                                       (81)
	RelOp -> '<'                                       (82)
	RelOp -> '<='                                      (83)
	RelOp -> '>'                                       (84)
	RelOp -> '>='                                      (85)
	RelOp -> '=='                                      (86)
	RelOp -> '!='                                      (87)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	ClassStmt       rules 10, 11
	ListClassStmt   rules 12, 13
	FnDef           rule  14
	Arg             rule  15
	ListArg         rules 16, 17, 18
	Block           rule  19
	ListStmt        rules 20, 21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Item            rules 35, 36
	ListItem        rules 37, 38
	Type            rules 39, 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr6           rules 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60
	Expr5           rules 61, 62, 63
	Expr4           rules 64, 65
	Expr3           rules 66, 67
	Expr2           rules 68, 69
	Expr1           rules 70, 71
	Expr            rules 72, 73
	ListExpr        rules 74, 75, 76
	AddOp           rules 77, 78
	MulOp           rules 79, 80, 81
	RelOp           rules 82, 83, 84, 85, 86, 87

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	FnDef          goto state 7
	Type           goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_Ident        reduce using rule 44


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 17
	FnDef          goto state 7
	Type           goto state 8

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> FnDef .                                   (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 8

	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 14)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 15

State 9

	Type -> 'boolean' .                                 (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_Ident        reduce using rule 41


State 10

	TopDef -> 'class' . Ident '{' ListClassStmt '}'     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClassStmt '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 11

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39


State 12

	Type -> 'string' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40


State 13

	Type -> 'void' .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        reduce using rule 42


State 14

	TopDef -> 'class' Ident . '{' ListClassStmt '}'     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClassStmt '}'    (rule 7)

	'extends'      shift, and enter state 19
	'{'            shift, and enter state 20


State 15

	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 14)

	'('            shift, and enter state 18


State 16

	Type -> Type '[]' .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_Ident        reduce using rule 43


State 17

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 18

	FnDef -> Type Ident '(' . ListArg ')' Block         (rule 14)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 27
	Type           goto state 28

State 19

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClassStmt '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 25

State 20

	TopDef -> 'class' Ident '{' . ListClassStmt '}'     (rule 6)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassStmt      goto state 21
	ListClassStmt  goto state 22
	FnDef          goto state 23
	Type           goto state 24

State 21

	ListClassStmt -> ClassStmt .                        (rule 12)
	ListClassStmt -> ClassStmt . ListClassStmt          (rule 13)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            reduce using rule 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassStmt      goto state 21
	ListClassStmt  goto state 35
	FnDef          goto state 23
	Type           goto state 24

State 22

	TopDef -> 'class' Ident '{' ListClassStmt . '}'     (rule 6)

	'}'            shift, and enter state 34


State 23

	ClassStmt -> FnDef .                                (rule 10)

	'boolean'      reduce using rule 10
	'int'          reduce using rule 10
	'string'       reduce using rule 10
	'void'         reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10


State 24

	ClassStmt -> Type . Ident ';'                       (rule 11)
	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 14)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 33

State 25

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClassStmt '}'    (rule 7)

	'{'            shift, and enter state 32


State 26

	ListArg -> Arg .                                    (rule 17)
	ListArg -> Arg . ',' ListArg                        (rule 18)

	')'            reduce using rule 17
	','            shift, and enter state 31


State 27

	FnDef -> Type Ident '(' ListArg . ')' Block         (rule 14)

	')'            shift, and enter state 30


State 28

	Arg -> Type . Ident                                 (rule 15)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 29

State 29

	Arg -> Type Ident .                                 (rule 15)

	')'            reduce using rule 15
	','            reduce using rule 15


State 30

	FnDef -> Type Ident '(' ListArg ')' . Block         (rule 14)

	'{'            shift, and enter state 40

	Block          goto state 39

State 31

	ListArg -> Arg ',' . ListArg                        (rule 18)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 38
	Type           goto state 28

State 32

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClassStmt '}'    (rule 7)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassStmt      goto state 21
	ListClassStmt  goto state 37
	FnDef          goto state 23
	Type           goto state 24

State 33

	ClassStmt -> Type Ident . ';'                       (rule 11)
	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 14)

	'('            shift, and enter state 18
	';'            shift, and enter state 36


State 34

	TopDef -> 'class' Ident '{' ListClassStmt '}' .     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 35

	ListClassStmt -> ClassStmt ListClassStmt .          (rule 13)

	'}'            reduce using rule 13


State 36

	ClassStmt -> Type Ident ';' .                       (rule 11)

	'boolean'      reduce using rule 11
	'int'          reduce using rule 11
	'string'       reduce using rule 11
	'void'         reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11


State 37

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassStmt . '}'    (rule 7)

	'}'            shift, and enter state 68


State 38

	ListArg -> Arg ',' ListArg .                        (rule 18)

	')'            reduce using rule 18


State 39

	FnDef -> Type Ident '(' ListArg ')' Block .         (rule 14)

	'boolean'      reduce using rule 14
	'class'        reduce using rule 14
	'int'          reduce using rule 14
	'string'       reduce using rule 14
	'void'         reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 40

	Block -> '{' . ListStmt '}'                         (rule 19)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	ListStmt       goto state 45
	Stmt           goto state 46
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 41

	Stmt -> Ident . '++' ';'                            (rule 26)
	Stmt -> Ident . '--' ';'                            (rule 27)
	Type -> Ident .                                     (rule 44)
	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 105
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 106
	'-'            reduce using rule 48
	'--'           shift, and enter state 107
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 44
	'||'           reduce using rule 48
	L_Ident        reduce using rule 44


State 42

	Expr6 -> Integer .                                  (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 43

	Expr6 -> String .                                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 44

	Stmt -> Block .                                     (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 45

	Block -> '{' ListStmt . '}'                         (rule 19)

	'}'            shift, and enter state 104


State 46

	ListStmt -> Stmt . ListStmt                         (rule 21)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	ListStmt       goto state 103
	Stmt           goto state 46
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 47

	Stmt -> Type . ListItem ';'                         (rule 24)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 100
	Item           goto state 101
	ListItem       goto state 102

State 48

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 55)
	Expr6 -> Expr6 . '.' Ident                          (rule 56)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> Expr6 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'.'            shift, and enter state 98
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            shift, and enter state 99
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 49

	Expr4 -> Expr5 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 50

	Expr4 -> Expr4 . MulOp Expr5                        (rule 64)
	Expr3 -> Expr4 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            shift, and enter state 95
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 96
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 97
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67

	MulOp          goto state 94

State 51

	Expr3 -> Expr3 . AddOp Expr4                        (rule 66)
	Expr2 -> Expr3 .                                    (rule 69)

	'!='           reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 92
	','            reduce using rule 69
	'-'            shift, and enter state 93
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	AddOp          goto state 91

State 52

	Expr2 -> Expr2 . RelOp Expr3                        (rule 68)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 70)
	Expr1 -> Expr2 .                                    (rule 71)

	'!='           shift, and enter state 84
	'&&'           shift, and enter state 85
	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'='            reduce using rule 71
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 71
	'||'           reduce using rule 71

	RelOp          goto state 83

State 53

	Expr -> Expr1 . '||' Expr                           (rule 72)
	Expr -> Expr1 .                                     (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	']'            reduce using rule 73
	'||'           shift, and enter state 82


State 54

	Stmt -> Expr . '=' Expr ';'                         (rule 25)
	Stmt -> Expr . ';'                                  (rule 33)

	';'            shift, and enter state 80
	'='            shift, and enter state 81


State 55

	Expr5 -> '!' . Expr6                                (rule 62)

	'('            shift, and enter state 56
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 79

State 56

	Expr6 -> '(' . Ident ')' 'null'                     (rule 58)
	Expr6 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 77
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 78

State 57

	Expr5 -> '-' . Expr6                                (rule 61)

	'('            shift, and enter state 56
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 76

State 58

	Stmt -> ';' .                                       (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 59

	Expr6 -> 'false' .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 60

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 34)

	'('            shift, and enter state 75


State 61

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 31)

	'('            shift, and enter state 74


State 62

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 52)
	Expr6 -> 'new' . Type                               (rule 53)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 73

State 63

	Stmt -> 'return' . Expr ';'                         (rule 28)
	Stmt -> 'return' . ';'                              (rule 29)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 72
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 71

State 64

	Expr6 -> 'true' .                                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 65

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 32)

	'('            shift, and enter state 69


State 66

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 67

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 68

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassStmt '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 69

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 32)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 129

State 70

	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 105
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 71

	Stmt -> 'return' Expr . ';'                         (rule 28)

	';'            shift, and enter state 128


State 72

	Stmt -> 'return' ';' .                              (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 73

	Type -> Type . '[]'                                 (rule 43)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 52)
	Expr6 -> 'new' Type .                               (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            shift, and enter state 127
			(reduce using rule 53)

	'[]'           shift, and enter state 16
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 74

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 126

State 75

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 34)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 125

State 76

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 55)
	Expr6 -> Expr6 . '.' Ident                          (rule 56)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> '-' Expr6 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'.'            shift, and enter state 98
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            shift, and enter state 99
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 77

	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 54)
	Expr6 -> '(' Ident . ')' 'null'                     (rule 58)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 105
	')'            shift, and enter state 124
			(reduce using rule 48)

	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'||'           reduce using rule 48


State 78

	Expr6 -> '(' Expr . ')'                             (rule 60)

	')'            shift, and enter state 123


State 79

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 55)
	Expr6 -> Expr6 . '.' Ident                          (rule 56)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> '!' Expr6 .                                (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'.'            shift, and enter state 98
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            shift, and enter state 99
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 80

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 81

	Stmt -> Expr '=' . Expr ';'                         (rule 25)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 122

State 82

	Expr -> Expr1 '||' . Expr                           (rule 72)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 121

State 83

	Expr2 -> Expr2 RelOp . Expr3                        (rule 68)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 120

State 84

	RelOp -> '!=' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 85

	Expr1 -> Expr2 '&&' . Expr1                         (rule 70)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 119

State 86

	RelOp -> '<' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 87

	RelOp -> '<=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 88

	RelOp -> '==' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 89

	RelOp -> '>' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 90

	RelOp -> '>=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 91

	Expr3 -> Expr3 AddOp . Expr4                        (rule 66)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 118

State 92

	AddOp -> '+' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 93

	AddOp -> '-' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 94

	Expr4 -> Expr4 MulOp . Expr5                        (rule 64)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 117

State 95

	MulOp -> '%' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 96

	MulOp -> '*' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 97

	MulOp -> '/' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 98

	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 55)
	Expr6 -> Expr6 '.' . Ident                          (rule 56)

	L_Ident        shift, and enter state 2

	Ident          goto state 116

State 99

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 115

State 100

	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 114


State 101

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 113
	';'            reduce using rule 37


State 102

	Stmt -> Type ListItem . ';'                         (rule 24)

	';'            shift, and enter state 112


State 103

	ListStmt -> Stmt ListStmt .                         (rule 21)

	'}'            reduce using rule 21


State 104

	Block -> '{' ListStmt '}' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'class'        reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 105

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 54)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	')'            reduce using rule 74
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 110
	ListExpr       goto state 111

State 106

	Stmt -> Ident '++' . ';'                            (rule 26)

	';'            shift, and enter state 109


State 107

	Stmt -> Ident '--' . ';'                            (rule 27)

	';'            shift, and enter state 108


State 108

	Stmt -> Ident '--' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 109

	Stmt -> Ident '++' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 110

	ListExpr -> Expr .                                  (rule 75)
	ListExpr -> Expr . ',' ListExpr                     (rule 76)

	')'            reduce using rule 75
	','            shift, and enter state 141


State 111

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 54)

	')'            shift, and enter state 140


State 112

	Stmt -> Type ListItem ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 113

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_Ident        shift, and enter state 2

	Ident          goto state 100
	Item           goto state 101
	ListItem       goto state 139

State 114

	Item -> Ident '=' . Expr                            (rule 36)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 138

State 115

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 137


State 116

	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 55)
	Expr6 -> Expr6 '.' Ident .                          (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 136
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 117

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 118

	Expr4 -> Expr4 . MulOp Expr5                        (rule 64)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 66)

	'!='           reduce using rule 66
	'%'            shift, and enter state 95
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 96
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 97
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66

	MulOp          goto state 94

State 119

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'='            reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70


State 120

	Expr3 -> Expr3 . AddOp Expr4                        (rule 66)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 68)

	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 92
	','            reduce using rule 68
	'-'            shift, and enter state 93
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	AddOp          goto state 91

State 121

	Expr -> Expr1 '||' Expr .                           (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	']'            reduce using rule 72


State 122

	Stmt -> Expr '=' Expr . ';'                         (rule 25)

	';'            shift, and enter state 135


State 123

	Expr6 -> '(' Expr ')' .                             (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 124

	Expr6 -> '(' Ident ')' . 'null'                     (rule 58)

	'null'         shift, and enter state 134


State 125

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 34)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 133

State 126

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 31)

	')'            shift, and enter state 132


State 127

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 52)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 131

State 128

	Stmt -> 'return' Expr ';' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 129

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 32)

	')'            shift, and enter state 130


State 130

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 32)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	Stmt           goto state 147
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 131

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 52)

	']'            shift, and enter state 146


State 132

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	Stmt           goto state 145
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 133

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 34)

	':'            shift, and enter state 144


State 134

	Expr6 -> '(' Ident ')' 'null' .                     (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 135

	Stmt -> Expr '=' Expr ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 136

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 55)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	')'            reduce using rule 74
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 110
	ListExpr       goto state 143

State 137

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 138

	Item -> Ident '=' Expr .                            (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36


State 139

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 140

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 141

	ListExpr -> Expr ',' . ListExpr                     (rule 76)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	')'            reduce using rule 74
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 110
	ListExpr       goto state 142

State 142

	ListExpr -> Expr ',' ListExpr .                     (rule 76)

	')'            reduce using rule 76


State 143

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 55)

	')'            shift, and enter state 150


State 144

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 34)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	'false'        shift, and enter state 59
	'new'          shift, and enter state 62
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 70
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 149

State 145

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 30)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 31)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         shift, and enter state 148
			(reduce using rule 30)

	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 146

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 147

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 148

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 31)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	Stmt           goto state 152
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 149

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 34)

	')'            shift, and enter state 151


State 150

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 151

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 34)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 59
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'int'          shift, and enter state 11
	'new'          shift, and enter state 62
	'return'       shift, and enter state 63
	'string'       shift, and enter state 12
	'true'         shift, and enter state 64
	'void'         shift, and enter state 13
	'while'        shift, and enter state 65
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Block          goto state 44
	Stmt           goto state 153
	Type           goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54

State 152

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 153

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 88
Number of terminals: 46
Number of non-terminals: 30
Number of states: 154
