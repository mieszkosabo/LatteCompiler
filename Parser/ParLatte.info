-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser/ParLatte.y
-----------------------------------------------------------------------------

state 123 contains 1 shift/reduce conflicts.

rule 38 is unused
rule 39 is unused
rule 40 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt ListStmt                          (14)
	Stmt -> ';'                                        (15)
	Stmt -> Block                                      (16)
	Stmt -> Type ListItem ';'                          (17)
	Stmt -> Expr '=' Expr ';'                          (18)
	Stmt -> Ident '++' ';'                             (19)
	Stmt -> Ident '--' ';'                             (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'return' ';'                               (22)
	Stmt -> 'if' '(' Expr ')' Stmt                     (23)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (24)
	Stmt -> 'while' '(' Expr ')' Stmt                  (25)
	Stmt -> Expr ';'                                   (26)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (27)
	Item -> Ident                                      (28)
	Item -> Ident '=' Expr                             (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'int'                                      (32)
	Type -> 'string'                                   (33)
	Type -> 'boolean'                                  (34)
	Type -> 'void'                                     (35)
	Type -> Type '[]'                                  (36)
	Type -> Ident                                      (37)
	ListType ->                                        (38)
	ListType -> Type                                   (39)
	ListType -> Type ',' ListType                      (40)
	Expr6 -> Ident                                     (41)
	Expr6 -> Integer                                   (42)
	Expr6 -> 'true'                                    (43)
	Expr6 -> 'false'                                   (44)
	Expr6 -> 'new' Type '[' Expr ']'                   (45)
	Expr6 -> Ident '(' ListExpr ')'                    (46)
	Expr6 -> Expr6 '.' Ident                           (47)
	Expr6 -> Expr6 '[' Expr ']'                        (48)
	Expr6 -> String                                    (49)
	Expr6 -> '(' Expr ')'                              (50)
	Expr5 -> '-' Expr6                                 (51)
	Expr5 -> '!' Expr6                                 (52)
	Expr5 -> Expr6                                     (53)
	Expr4 -> Expr4 MulOp Expr5                         (54)
	Expr4 -> Expr5                                     (55)
	Expr3 -> Expr3 AddOp Expr4                         (56)
	Expr3 -> Expr4                                     (57)
	Expr2 -> Expr2 RelOp Expr3                         (58)
	Expr2 -> Expr3                                     (59)
	Expr1 -> Expr2 '&&' Expr1                          (60)
	Expr1 -> Expr2                                     (61)
	Expr -> Expr1 '||' Expr                            (62)
	Expr -> Expr1                                      (63)
	ListExpr ->                                        (64)
	ListExpr -> Expr                                   (65)
	ListExpr -> Expr ',' ListExpr                      (66)
	AddOp -> '+'                                       (67)
	AddOp -> '-'                                       (68)
	MulOp -> '*'                                       (69)
	MulOp -> '/'                                       (70)
	MulOp -> '%'                                       (71)
	RelOp -> '<'                                       (72)
	RelOp -> '<='                                      (73)
	RelOp -> '>'                                       (74)
	RelOp -> '>='                                      (75)
	RelOp -> '=='                                      (76)
	RelOp -> '!='                                      (77)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'else'         { PT _ (TS _ 27) }
	'false'        { PT _ (TS _ 28) }
	'for'          { PT _ (TS _ 29) }
	'if'           { PT _ (TS _ 30) }
	'int'          { PT _ (TS _ 31) }
	'new'          { PT _ (TS _ 32) }
	'return'       { PT _ (TS _ 33) }
	'string'       { PT _ (TS _ 34) }
	'true'         { PT _ (TS _ 35) }
	'void'         { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
	Item            rules 28, 29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35, 36, 37
	ListType        rules 38, 39, 40
	Expr6           rules 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
	Expr5           rules 51, 52, 53
	Expr4           rules 54, 55
	Expr3           rules 56, 57
	Expr2           rules 58, 59
	Expr1           rules 60, 61
	Expr            rules 62, 63
	ListExpr        rules 64, 65, 66
	AddOp           rules 67, 68
	MulOp           rules 69, 70, 71
	RelOp           rules 72, 73, 74, 75, 76, 77

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 37)

	'['            reduce using rule 37
	'[]'           reduce using rule 37
	L_Ident        reduce using rule 37


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 14
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 36)

	'[]'           shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 12

State 8

	Type -> 'boolean' .                                 (rule 34)

	'['            reduce using rule 34
	'[]'           reduce using rule 34
	L_Ident        reduce using rule 34


State 9

	Type -> 'int' .                                     (rule 32)

	'['            reduce using rule 32
	'[]'           reduce using rule 32
	L_Ident        reduce using rule 32


State 10

	Type -> 'string' .                                  (rule 33)

	'['            reduce using rule 33
	'[]'           reduce using rule 33
	L_Ident        reduce using rule 33


State 11

	Type -> 'void' .                                    (rule 35)

	'['            reduce using rule 35
	'[]'           reduce using rule 35
	L_Ident        reduce using rule 35


State 12

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 15


State 13

	Type -> Type '[]' .                                 (rule 36)

	'['            reduce using rule 36
	'[]'           reduce using rule 36
	L_Ident        reduce using rule 36


State 14

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 15

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 16
	ListArg        goto state 17
	Type           goto state 18

State 16

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 21


State 17

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 20


State 18

	Arg -> Type . Ident                                 (rule 8)
	Type -> Type . '[]'                                 (rule 36)

	'[]'           shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 19

State 19

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 20

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 24

	Block          goto state 23

State 21

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 16
	ListArg        goto state 22
	Type           goto state 18

State 22

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 23

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 24

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 29
	Stmt           goto state 30
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 25

	Stmt -> Ident . '++' ';'                            (rule 19)
	Stmt -> Ident . '--' ';'                            (rule 20)
	Type -> Ident .                                     (rule 37)
	Expr6 -> Ident .                                    (rule 41)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            shift, and enter state 87
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           shift, and enter state 88
	'-'            reduce using rule 41
	'--'           shift, and enter state 89
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 37
	'||'           reduce using rule 41
	L_Ident        reduce using rule 37


State 26

	Expr6 -> Integer .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42


State 27

	Expr6 -> String .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 28

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'new'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 29

	Block -> '{' ListStmt . '}'                         (rule 12)

	'}'            shift, and enter state 86


State 30

	ListStmt -> Stmt . ListStmt                         (rule 14)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 85
	Stmt           goto state 30
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 31

	Stmt -> Type . ListItem ';'                         (rule 17)
	Type -> Type . '[]'                                 (rule 36)

	'[]'           shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Item           goto state 83
	ListItem       goto state 84

State 32

	Expr6 -> Expr6 . '.' Ident                          (rule 47)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 48)
	Expr5 -> Expr6 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            shift, and enter state 80
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            shift, and enter state 81
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 33

	Expr4 -> Expr5 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 34

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr4 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            shift, and enter state 77
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            shift, and enter state 78
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            shift, and enter state 79
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57

	MulOp          goto state 76

State 35

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr3 .                                    (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'+'            shift, and enter state 74
	','            reduce using rule 59
	'-'            shift, and enter state 75
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59

	AddOp          goto state 73

State 36

	Expr2 -> Expr2 . RelOp Expr3                        (rule 58)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 60)
	Expr1 -> Expr2 .                                    (rule 61)

	'!='           shift, and enter state 66
	'&&'           shift, and enter state 67
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 68
	'<='           shift, and enter state 69
	'='            reduce using rule 61
	'=='           shift, and enter state 70
	'>'            shift, and enter state 71
	'>='           shift, and enter state 72
	']'            reduce using rule 61
	'||'           reduce using rule 61

	RelOp          goto state 65

State 37

	Expr -> Expr1 . '||' Expr                           (rule 62)
	Expr -> Expr1 .                                     (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'='            reduce using rule 63
	']'            reduce using rule 63
	'||'           shift, and enter state 64


State 38

	Stmt -> Expr . '=' Expr ';'                         (rule 18)
	Stmt -> Expr . ';'                                  (rule 26)

	';'            shift, and enter state 62
	'='            shift, and enter state 63


State 39

	Expr5 -> '!' . Expr6                                (rule 52)

	'('            shift, and enter state 40
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 61

State 40

	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 60

State 41

	Expr5 -> '-' . Expr6                                (rule 51)

	'('            shift, and enter state 40
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 59

State 42

	Stmt -> ';' .                                       (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'new'          reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 43

	Expr6 -> 'false' .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44


State 44

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 27)

	'('            shift, and enter state 58


State 45

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 23)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 24)

	'('            shift, and enter state 57


State 46

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 45)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 56

State 47

	Stmt -> 'return' . Expr ';'                         (rule 21)
	Stmt -> 'return' . ';'                              (rule 22)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 55
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 54

State 48

	Expr6 -> 'true' .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43


State 49

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 25)

	'('            shift, and enter state 52


State 50

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 51

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 52

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 25)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 110

State 53

	Expr6 -> Ident .                                    (rule 41)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            shift, and enter state 87
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41


State 54

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 109


State 55

	Stmt -> 'return' ';' .                              (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 56

	Type -> Type . '[]'                                 (rule 36)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 45)

	'['            shift, and enter state 108
	'[]'           shift, and enter state 13


State 57

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 23)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 24)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 107

State 58

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 27)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 106

State 59

	Expr6 -> Expr6 . '.' Ident                          (rule 47)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 48)
	Expr5 -> '-' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            shift, and enter state 80
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 81
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 60

	Expr6 -> '(' Expr . ')'                             (rule 50)

	')'            shift, and enter state 105


State 61

	Expr6 -> Expr6 . '.' Ident                          (rule 47)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 48)
	Expr5 -> '!' Expr6 .                                (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            shift, and enter state 80
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            shift, and enter state 81
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 62

	Stmt -> Expr ';' .                                  (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 63

	Stmt -> Expr '=' . Expr ';'                         (rule 18)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 104

State 64

	Expr -> Expr1 '||' . Expr                           (rule 62)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 103

State 65

	Expr2 -> Expr2 RelOp . Expr3                        (rule 58)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 102

State 66

	RelOp -> '!=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 67

	Expr1 -> Expr2 '&&' . Expr1                         (rule 60)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 101

State 68

	RelOp -> '<' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'new'          reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 69

	RelOp -> '<=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'new'          reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 70

	RelOp -> '==' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 71

	RelOp -> '>' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'new'          reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 72

	RelOp -> '>=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'new'          reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 73

	Expr3 -> Expr3 AddOp . Expr4                        (rule 56)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 100

State 74

	AddOp -> '+' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'new'          reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 75

	AddOp -> '-' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'new'          reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	Expr4 -> Expr4 MulOp . Expr5                        (rule 54)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 99

State 77

	MulOp -> '%' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'new'          reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 78

	MulOp -> '*' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'new'          reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 79

	MulOp -> '/' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'new'          reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 80

	Expr6 -> Expr6 '.' . Ident                          (rule 47)

	L_Ident        shift, and enter state 2

	Ident          goto state 98

State 81

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 48)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 97

State 82

	Item -> Ident .                                     (rule 28)
	Item -> Ident . '=' Expr                            (rule 29)

	','            reduce using rule 28
	';'            reduce using rule 28
	'='            shift, and enter state 96


State 83

	ListItem -> Item .                                  (rule 30)
	ListItem -> Item . ',' ListItem                     (rule 31)

	','            shift, and enter state 95
	';'            reduce using rule 30


State 84

	Stmt -> Type ListItem . ';'                         (rule 17)

	';'            shift, and enter state 94


State 85

	ListStmt -> Stmt ListStmt .                         (rule 14)

	'}'            reduce using rule 14


State 86

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'boolean'      reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'new'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 87

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 46)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 64
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 92
	ListExpr       goto state 93

State 88

	Stmt -> Ident '++' . ';'                            (rule 19)

	';'            shift, and enter state 91


State 89

	Stmt -> Ident '--' . ';'                            (rule 20)

	';'            shift, and enter state 90


State 90

	Stmt -> Ident '--' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 91

	Stmt -> Ident '++' ';' .                            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 92

	ListExpr -> Expr .                                  (rule 65)
	ListExpr -> Expr . ',' ListExpr                     (rule 66)

	')'            reduce using rule 65
	','            shift, and enter state 120


State 93

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 46)

	')'            shift, and enter state 119


State 94

	Stmt -> Type ListItem ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'new'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 95

	ListItem -> Item ',' . ListItem                     (rule 31)

	L_Ident        shift, and enter state 2

	Ident          goto state 82
	Item           goto state 83
	ListItem       goto state 118

State 96

	Item -> Ident '=' . Expr                            (rule 29)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 117

State 97

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 48)

	']'            shift, and enter state 116


State 98

	Expr6 -> Expr6 '.' Ident .                          (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 99

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 100

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 77
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 78
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 79
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 76

State 101

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'='            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 102

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 74
	','            reduce using rule 58
	'-'            shift, and enter state 75
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 73

State 103

	Expr -> Expr1 '||' Expr .                           (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	'='            reduce using rule 62
	']'            reduce using rule 62


State 104

	Stmt -> Expr '=' Expr . ';'                         (rule 18)

	';'            shift, and enter state 115


State 105

	Expr6 -> '(' Expr ')' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 106

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 27)
	Type -> Type . '[]'                                 (rule 36)

	'[]'           shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 114

State 107

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 23)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 24)

	')'            shift, and enter state 113


State 108

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 45)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 112

State 109

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 110

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 25)

	')'            shift, and enter state 111


State 111

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 25)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 125
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 112

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 45)

	']'            shift, and enter state 124


State 113

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 23)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 24)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 123
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 114

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 27)

	':'            shift, and enter state 122


State 115

	Stmt -> Expr '=' Expr ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 116

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 117

	Item -> Ident '=' Expr .                            (rule 29)

	','            reduce using rule 29
	';'            reduce using rule 29


State 118

	ListItem -> Item ',' ListItem .                     (rule 31)

	';'            reduce using rule 31


State 119

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46


State 120

	ListExpr -> Expr ',' . ListExpr                     (rule 66)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 64
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 92
	ListExpr       goto state 121

State 121

	ListExpr -> Expr ',' ListExpr .                     (rule 66)

	')'            reduce using rule 66


State 122

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 27)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 43
	'new'          shift, and enter state 46
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 127

State 123

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 23)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         shift, and enter state 126
			(reduce using rule 23)

	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 124

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45


State 125

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 126

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 24)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 129
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 127

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 27)

	')'            shift, and enter state 128


State 128

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 27)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 9
	'new'          shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 10
	'true'         shift, and enter state 48
	'void'         shift, and enter state 11
	'while'        shift, and enter state 49
	'{'            shift, and enter state 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	Stmt           goto state 130
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 129

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 130

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 78
Number of terminals: 43
Number of non-terminals: 27
Number of states: 131
